{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","updateStatus","autoFocus","onBlur","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","reduxForm","form","MyPosts","postsElements","posts","map","p","postsBlock","formData","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","componentDidMount","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","console","log","compose","withRouter"],"mappings":"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","file":"static/js/3.17957a64.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Ufdb\",\"title\":\"ProfileInfo_title__2Miwm\",\"avatar\":\"ProfileInfo_avatar__1pq4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1HBj2\",\"posts\":\"MyPosts_posts__2jsti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__34Ktw\"};","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        if (editMode) {\r\n            props.updateStatus(status)\r\n        }\r\n        setEditMode(!editMode)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={toggleEditMode}>\r\n                        {props.status || \"-----\"}\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input autoFocus onBlur={toggleEditMode}\r\n                           onChange={onStatusChange}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"Avatar\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utills/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component={Textarea}\r\n                     name=\"newPostText\"\r\n                     placeholder=\"Post message\"\r\n                     validate={[required, maxLength10]}\r\n              />\r\n          </div>\r\n          <div>\r\n              <button>Add post</button>\r\n          </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: newPostText => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         isAuth={props.isAuth}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount = () => {\r\n        const userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n\r\n        if (!userId) {\r\n            this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    render() {\r\n        console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"mapStateToProps PROFILE\");\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}